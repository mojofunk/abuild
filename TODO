Add an PKG_RELEASE environment variable and use it in install package
name

Instead of touching a file in the root directory to indicate a package
has been installed, add a directory to
$INSTALL_PATH/share/abuild/$PKG_NAME and then add the ABUILD file used
to build the package and possibly add an ACONFIG file that contains the
environment variables used for the build

Add argument to not process dependencies, or don't process deps by
default and add a -r(recursive) argument.

Add argument to link to system libs(via pkg-config) if installed or just
prefix PKG_CONFIG_PATH and PKG_CONFIG_LIBDIR?

Add argument to prefer checkout over release

Rename ABUILD_PKG_DIRECTORY to ABUILD_PKG_DIR

Add ABUILD_PKG_ROOT_DIR env var

Where we want to use binary versions, specify a list of the runtime
files to copy into the PREFIX.

if MSYS2 and SYSTEM_RUNTIME copy dll's etc to PKG_INSTALL_DIR

Append version to package build path...Use PKG_SRC_DIR? No, we want to
be able to use the same name as the checkout dir so that
PKG_BUILD_ROOT_DIR can be set in the environment to override and build
a "development" version of the code temporarily. What is needed is a way
to identify whether if a source directory already exists that it
corresponds to the version of the package that we are building. I think
a solution to this would be to touch a file like
$PKG_BUILD_DIR/$PKG_NAME-$PKG_VERSION.abuild and then if any other
.abuild files exist in the build directory then stop the build.

Should a PKG_RELEASE be added to differentiate changes/fixes between
builds?...probably.

gettext-0.19.8.1 is broken for 32bit mingw builds, it fixed
upstream(apparently) but no release yet.

Should libsamplerate depend on fftw? what does it enable

When building a package and the prefix path changes all deps should
probably be uninstalled and rebuilt so that there are not issue with
libtool and other changes that may cause problems. So on first build
uninstall all package deps.

Make clean command recursive with recursive flag

Add removal of libtool files from the lib directory to autotools_install?

Rename PKG_LIB_DIR/PKG_BIN_DIR/etc to LIBDIR/BINDIR/INCDIR/ETCDIR

Use DESTDIR and PREFIX correctly

Rename prep to prepare, none of the other commands are shortened...

Add uninstall command

Add ability for packages to set a list of runtime and devel file lists?
and then recursively install just the runtime files to create smaller
packages? or define DEVEL_FILES and then remove them from install dir?
This is getting much closer to RPM...

Add install-runtime and install-devel commands that take a list of
runtime or devel files.

Use standard MAKEFLAGS var instead of SMP_MAKEFLAGS

Remove all libtool archives for windows builds

When an abuild package is installed it must check if another version of
the current package is already installed and perhaps remove it
automatically or fail the install and make user do it?

When a package is installed it should always be installed into a
tmp destdir. Then files specified in PKG_FILES will be moved into
$PKG_DESTDIR and PKG_DEVEL_FILES will be moved into $PKG_DESTDIR-devel
and a list of files in each directory is written to a
file. $PKG_NAME.$VERSION.abuild.files and
$PKG_NAME.$VERSION-devel.abuild.files or something and these lists of
files are used for uninstalling a package.

e.g

Build and install a package and all its dependencies into a destdir,
specifying the -S flag with -D means that all package dependencies must
be installed on the system, which will be checked via installed abuild
files.

-r (recursive)
-D (destdir, no args as package name/version/compiler/host_arch etc used)
-S (use system libs if installed, which will be copy into destdir because -r is specified)
-t (toolset)

./abuild.sh -r -D -S -t mingw install gtk2

Build and install a package into system paths. All dependencies must be
installed on the system and checked via pkg-config

./abuild.sh -r -t mingw install gtk2

Remove a package and all its dependencies from a system.

./abuild.sh -r -t mingw uninstall gtk2

Just remove a package from a system, and not its dependencies.

./abuild.sh -t mingw uninstall gtk2

Install a runtime package and all its dependencies into a destdir. This
will only work if all the dependencies have been built and installed via
abuild. So abuild must check that no files in the runtime/devel packages
exist before building/installing of abuild package so that packages that
have been installed via other methods (apt/yum/pacman) are not
overwritten. Should not install to system paths if it isn't already
installed.

./abuild.sh -r -D -t mingw install-runtime gtk2
